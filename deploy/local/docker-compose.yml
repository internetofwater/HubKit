version: '3.7'

services:
    webapp:
        container_name: webapp
#        platform: linux/amd64
        image: internetofwater/hubkit-config-ui:local
#        build:
#            context: ../hub-front
#            dockerfile: ../hub-front/Dockerfile
#        volumes: only need these for local angular development
#            - '../hub-front:/app'
#            - '../hub-front/app/node_modules'
        ports:
            - '4200:4200'
    
    api:
        container_name: api
#        platform: linux/amd64
        image: internetofwater/hubkit-config-api:latest
#        build:
#            context: ../hub-back
#            dockerfile: ../hub-back/Dockerfile
        # volumes:
        #     - '../hub-back:/app'
        ports:
            - '5000:5000'
    pygeoapi:
        container_name: pygeoapi
        image: internetofwater/pygeoapi:latest
        ports: 
            - '5050:80'
        restart: always
        volumes:
             - ./hubkit.pygeoapi.config.yml:/pygeoapi/local.config.yml
        
    web:
        container_name: frost
        image: fraunhoferiosb/frost-server:2.0
        environment:
            - serviceRootUrl=http://frost:8080/FROST-Server #change to desired URL for production
            - http_cors_enable=true
            - http_cors_allowed_origins=*
            - http_cors_allowed_methods=GET,POST,PATCH,DELETE,OPTIONS,HEAD
            - persistence_db_driver=org.postgresql.Driver
            - persistence_db_url=jdbc:postgresql://database:5432/sensorthings
            - persistence_db_username=sensorthings
            - persistence_db_password=ChangeMe
            - persistence_autoUpdateDatabase=true
            - persistence_persistenceManagerImplementationClass=de.fraunhofer.iosb.ilt.frostserver.persistence.pgjooq.PostgresPersistenceManager
            - persistence_idGenerationMode=ServerAndClientGenerated
            - plugins_coreModel_idType=STRING
            - plugins_openApi_enable=true
        ports:
            - 8080:8080
            - 1883:1883
        depends_on:
            - database
    
    database:
        container_name: frostdb
        image: kartoza/postgis:14-3.2
        environment:
            - POSTGRES_DB=sensorthings
            - POSTGRES_USER=sensorthings
            - POSTGRES_PASS=ChangeMe
            - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology,postgis_raster,pgrouting,uuid-ossp
        volumes:
            - postgis_volume:/var/lib/postgresql/data
#   database:
#       container_name: frostdb
 #       image: postgis/postgis:11-2.5-alpine
 #       environment:
 #           - POSTGRES_DB=sensorthings
#            - POSTGRES_USER=sensorthings
#            - POSTGRES_PASSWORD=ChangeMe
#        volumes:
#            - postgis_volume:/var/lib/postgresql/data
volumes:
    postgis_volume:



