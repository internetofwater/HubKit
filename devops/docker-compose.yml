version: '3.7'

services:

    webapp:
        container_name: webapp
        image: webapp:dev
        build:
            context: ../hub-front
            dockerfile: ../hub-front/Dockerfile
#        volumes: only need these for local angular development
#            - '../hub-front:/app'
#            - '../hub-front/app/node_modules'
        ports:
            - '4200:4200'

    api:
        container_name: api
        image: python:dev
        build:
            context: ../hub-back
            dockerfile: ../hub-back/Dockerfile
        # volumes:
        #     - '../hub-back:/app'
        ports:
            - '5000:5000'

    web:
        container_name: frost
        image: fraunhoferiosb/frost-server:latest.  
        # image: ksonda/frost:arm change to this line for local macOS M1 chip development
        environment:
            - serviceRootUrl=http://localhost:8080/FROST-Server #change to desired URL
            - http_cors_enable=true
            - http_cors_allowed.origins=*
            - persistence_db_driver=org.postgresql.Driver
            - persistence_db_url=jdbc:postgresql://database:5432/sensorthings
            - persistence_db_username=sensorthings
            - persistence_db_password=ChangeMe
            - persistence_autoUpdateDatabase=true
            - persistence_persistenceManagerImplementationClass=de.fraunhofer.iosb.ilt.sta.persistence.pgjooq.imp.PostgresPersistenceManagerString
            - persistence_idGenerationMode=ServerAndClientGenerated
        ports:
            - 8080:8080
            - 1883:1883
        depends_on:
            - database
    
    database:
        container_name: frostdb
        image: kartoza/postgis:14-3.2
        environment:
            - POSTGRES_DB=sensorthings
            - POSTGRES_USER=sensorthings
            - POSTGRES_PASS=ChangeMe
            - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology,postgis_raster,pgrouting,uuid-ossp
        volumes:
            - postgis_volume:/var/lib/postgresql
volumes:
    postgis_volume:

